{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laura\\\\Documents\\\\Amazon\\\\my-app\\\\src\\\\TextInput.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass TextInput extends Component {\n  constructor(props) {\n    super(props);\n    this.handleInputChange = event => {\n      this.setState({\n        inputText: event.target.value\n      });\n    };\n    this.handleSubmit = () => {\n      const {\n        inputText\n      } = this.state;\n      fetch('http://127.0.0.1:5000/generate_output', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          inputText\n        })\n      }).then(response => response.json()).then(result => {\n        console.log(result);\n        this.setState({\n          isLoading: false,\n          control: true\n        });\n      }).catch(error => {\n        console.error(error);\n        this.setState({\n          isLoading: false,\n          error\n        });\n      });\n    };\n    this.state = {\n      inputText: \"\",\n      isLoading: false,\n      error: null,\n      image: null,\n      audio: null,\n      control: false\n    };\n  }\n  render() {\n    const {\n      inputText,\n      isLoading,\n      error,\n      control\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputText,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 23\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }, this), control ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/assets/cat.jpg\",\n          alt: \"Generated Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          src: \"/assets/output.wav\",\n          controls: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Input text and click Submit to generate an image and audio.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default TextInput;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","Fragment","_Fragment","TextInput","constructor","props","handleInputChange","event","setState","inputText","target","value","handleSubmit","state","fetch","method","headers","body","JSON","stringify","then","response","json","result","console","log","isLoading","control","catch","error","image","audio","render","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","message","src","alt","controls"],"sources":["C:/Users/laura/Documents/Amazon/my-app/src/TextInput.js"],"sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass TextInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      inputText: \"\",\r\n      isLoading: false,\r\n      error: null,\r\n      image: null,\r\n      audio: null,\r\n      control:false\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({ inputText: event.target.value });\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    const { inputText } = this.state;\r\n   \r\n\r\n  \r\n\r\n    fetch('http://127.0.0.1:5000/generate_output', {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ inputText }),\r\n    })\r\n    .then((response) => response.json())\r\n    .then((result) => {\r\n      console.log(result);\r\n      this.setState({\r\n        isLoading: false,\r\n        control: true,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n      this.setState({ isLoading: false, error });\r\n    });\r\n  };\r\n  \r\n\r\n  render() {\r\n    const { inputText, isLoading, error, control } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <input type=\"text\" value={inputText} onChange={this.handleInputChange} />\r\n        <button onClick={this.handleSubmit}>Submit</button>\r\n        {isLoading && <p>Loading...</p>}\r\n        {error && <p>Error: {error.message}</p>}\r\n        {control ? (\r\n          <>\r\n            <img src={\"/assets/cat.jpg\"} alt=\"Generated Image\" /> \r\n            <audio src={\"/assets/output.wav\"} controls />\r\n          </>\r\n        ) : (\r\n          isLoading && <p>Input text and click Submit to generate an image and audio.</p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextInput;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}